{"version":3,"sources":["app/app.module.js","app/app.routes.js","app/controllers/main-view.controller.js"],"names":[],"mappingsfile":"app.js","sourcesContent":["var app = angular.module('app', ['shared']);","app\r\n\t.config(['$stateProvider', function($stateProvider){\r\n\t\t$stateProvider\r\n\t\t\t.state('main', {\r\n\t\t\t\turl: '/',\r\n\t\t\t\tviews: {\r\n\t\t\t\t\t'': {\r\n\t\t\t\t\t\ttemplateUrl: '/app/shared/views/main.view.html',\r\n\t\t\t\t\t\tcontroller: 'mainViewController',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'content-container@main': {\r\n\t\t\t\t\t\ttemplateUrl: '/app/shared/views/content-container.view.html',\r\n\t\t\t\t\t\t// controller: 'postsContentContainerController',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'toolbar@main': {\r\n\t\t\t\t\t\ttemplateUrl: '/app/shared/templates/toolbar.template.html',\r\n\t\t\t\t\t\t// controller: 'postsToolbarController',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'left-sidenav@main': {\r\n\t\t\t\t\t\ttemplateUrl: '/app/shared/templates/sidenavs/main-left-sidenav.template.html',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'content@main':{\r\n\t\t\t\t\t\t// templateUrl: '/app/components/posts/templates/content/posts.template.html',\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t}]);","app\r\n\t.controller('mainViewController', ['$scope', '$filter', '$state', '$mdDialog', '$mdSidenav', '$mdToast', 'Helper', 'FileUploader', function($scope, $filter, $state, $mdDialog, $mdSidenav, $mdToast, Helper, FileUploader){\r\n\t\t$scope.toggleSidenav = function(menuID){\r\n\t\t\t$mdSidenav(menuID).toggle();\r\n\t\t}\r\n\r\n\t\t$scope.menu = {};\r\n\t\t$scope.menu.pages = [];\r\n\r\n\t\t$scope.menu.static = [\r\n\t\t\t{\r\n\t\t\t\t'state': 'main',\r\n\t\t\t\t'icon': 'mdi-home',\r\n\t\t\t\t'label': 'Home',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t'state': 'main.reviews',\r\n\t\t\t\t'icon': 'mdi-file-document-box',\r\n\t\t\t\t'label': 'Reviews',\r\n\t\t\t},\r\n\t\t];\r\n\r\n\t\t$scope.menu.section = [];\r\n\r\n\t\t// set section as active\r\n\t\t$scope.setActive = function(index){\r\n\t\t \tangular.element($('[aria-label=\"'+ 'section-' + index + '\"]').closest('li').toggleClass('active'));\r\n\t\t \tangular.element($('[aria-label=\"'+ 'section-' + index + '\"]').closest('li').siblings().removeClass('active'));\r\n\t\t};\r\n\t\t\r\n\t\t$scope.logout = function(){\r\n\t\t\tHelper.post('/user/logout')\r\n\t\t\t\t.success(function(){\r\n\t\t\t\t\twindow.location.href = '/';\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\t$scope.changePassword = function()\r\n\t\t{\r\n\t\t\t$mdDialog.show({\r\n\t\t      controller: 'changePasswordDialogController',\r\n\t\t      templateUrl: '/app/shared/templates/dialogs/change-password-dialog.template.html',\r\n\t\t      parent: angular.element(document.body),\r\n\t\t      fullscreen: true,\r\n\t\t    })\r\n\t\t    .then(function(){\r\n\t\t    \tHelper.notify('Password changed.')\r\n\t\t    });\r\n\t\t}\r\n\r\n\t\tvar uploader = {};\r\n\r\n\t\tuploader.filter = {\r\n            name: 'photoFilter',\r\n            fn: function(item /*{File|FileLikeObject}*/, options) {\r\n                var type = '|' + item.type.slice(item.type.lastIndexOf('/') + 1) + '|';\r\n                return '|jpg|png|jpeg|bmp|gif|'.indexOf(type) !== -1;\r\n            }\r\n        };\r\n\r\n        uploader.sizeFilter = {\r\n\t\t    'name': 'enforceMaxFileSize',\r\n\t\t    'fn': function (item) {\r\n\t\t        return item.size <= 2000000;\r\n\t\t    }\r\n        }\r\n\r\n        uploader.error = function(item /*{File|FileLikeObject}*/, filter, options) {\r\n            $scope.fileError = true;\r\n            $scope.photoUploader.queue = [];\r\n        };\r\n\r\n        uploader.headers = { 'X-CSRF-TOKEN': document.querySelector('meta[name=\"csrf-token\"]').getAttribute('content')};\r\n\r\n\t\t$scope.clickUpload = function(){\r\n\t\t    angular.element('#upload').trigger('click');\r\n\t\t};\r\n\r\n\t\t$scope.markAllAsRead = function(){\r\n\t\t\tHelper.post('/user/mark-all-as-read')\r\n\t\t\t\t.success(function(){\r\n\t\t\t\t\t$scope.user.unread_notifications = [];\r\n\t\t\t\t})\r\n\t\t}\r\n\r\n\t\tvar fetchUnreadNotifications = function(){\r\n\t\t\tHelper.post('/user/check')\r\n\t    \t\t.success(function(data){\r\n\t    \t\t\t$scope.user = data;\r\n\t    \t\t});\r\n\t\t}\r\n\r\n\t\tHelper.post('/user/check')\r\n\t\t\t.success(function(data){\r\n\t\t\t\tvar settings = false;\r\n\t\t\t\tvar settings_menu = [];\r\n\r\n\t\t\t\tangular.forEach(data.roles, function(role){\r\n\t\t\t\t\tif(role.name == 'supervisor')\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvar item = {\r\n\t\t\t\t\t\t\t'state': 'main.team-reviews',\r\n\t\t\t\t\t\t\t'icon': 'mdi-account-multiple',\r\n\t\t\t\t\t\t\t'label': 'Team Reviews',\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t$scope.menu.static.splice(2, 0, item);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(role.name == 'parameters')\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvar item = {\r\n\t\t\t\t\t\t\t'state': 'main.appraisal-forms',\r\n\t\t\t\t\t\t\t'icon': 'mdi-playlist-check',\r\n\t\t\t\t\t\t\t'label': 'Appraisal Forms',\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t$scope.menu.static.splice(2, 0, item);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(role.name == 'manage-groups')\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tsettings = true;\r\n\r\n\t\t\t\t\t\tvar item = {\r\n\t\t\t\t\t\t\t'label': 'Groups',\r\n\t\t\t\t\t\t\taction: function(){\r\n\t\t\t\t\t\t\t\t$state.go('main.groups');\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tsettings_menu.push(item);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(role.name == 'manage-users')\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tsettings = true;\r\n\r\n\t\t\t\t\t\tvar item = {\r\n\t\t\t\t\t\t\t'label': 'Users',\r\n\t\t\t\t\t\t\taction: function(){\r\n\t\t\t\t\t\t\t\t$state.go('main.users');\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tsettings_menu.push(item); \r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(role.name == 'manage-locations')\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tsettings = true;\r\n\r\n\t\t\t\t\t\tvar item = {\r\n\t\t\t\t\t\t\t'label': 'Rooms',\r\n\t\t\t\t\t\t\taction: function(){\r\n\t\t\t\t\t\t\t\t$state.go('main.locations');\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tsettings_menu.push(item); \r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(role.name == 'manage-equipment')\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tsettings = true;\r\n\r\n\t\t\t\t\t\tvar item = {\r\n\t\t\t\t\t\t\t'label': 'Equipment',\r\n\t\t\t\t\t\t\taction: function(){\r\n\t\t\t\t\t\t\t\t$state.go('main.equipment');\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tsettings_menu.push(item); \r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(role.name == 'manage-links')\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tsettings = true;\r\n\r\n\t\t\t\t\t\tvar item = {\r\n\t\t\t\t\t\t\t'label': 'Links',\r\n\t\t\t\t\t\t\taction: function(){\r\n\t\t\t\t\t\t\t\t$state.go('main.links');\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tsettings_menu.push(item); \r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(role.name == 'manage-birthdays')\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tsettings = true;\r\n\r\n\t\t\t\t\t\tvar item = {\r\n\t\t\t\t\t\t\t'label': 'Birthdays',\r\n\t\t\t\t\t\t\taction: function(){\r\n\t\t\t\t\t\t\t\t$state.go('main.birthdays');\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tsettings_menu.push(item); \r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(role.name == 'manage-forms')\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tsettings = true;\r\n\r\n\t\t\t\t\t\tvar item = {\r\n\t\t\t\t\t\t\t'label': 'Forms',\r\n\t\t\t\t\t\t\taction: function(){\r\n\t\t\t\t\t\t\t\t$state.go('main.forms');\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tsettings_menu.push(item); \r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(settings)\r\n\t\t\t\t{\r\n\t\t\t\t\t$scope.menu.section[0] = {\r\n\t\t\t\t\t\t'name':'Settings',\r\n\t\t\t\t\t\t'icon':'mdi-settings',\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t$scope.menu.pages[0] = settings_menu;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar notifications = {\r\n\t\t\t\t\t'state': 'main.notifications',\r\n\t\t\t\t\t'icon': 'mdi-bell',\r\n\t\t\t\t\t'label': 'Notifications',\r\n\t\t\t\t}\r\n\r\n\t\t\t\t$scope.menu.static.push(notifications);\r\n\r\n\t\t\t\t$scope.user = data;\r\n\r\n\t\t\t\t$scope.currentTime = Date.now();\r\n\r\n\t\t\t\tHelper.setAuthUser(data);\r\n\r\n\t\t\t\t/* Photo Uploader */\r\n\t\t\t\t$scope.photoUploader = new FileUploader({\r\n\t\t\t\t\turl: '/user/upload-avatar/' + $scope.user.id,\r\n\t\t\t\t\theaders: uploader.headers,\r\n\t\t\t\t\tqueueLimit : 1\r\n\t\t\t\t})\r\n\r\n\t\t\t\t// FILTERS\r\n\t\t        $scope.photoUploader.filters.push(uploader.filter);\r\n\t\t        $scope.photoUploader.filters.push(uploader.sizeFilter);\r\n\t\t        \r\n\t\t\t\t$scope.photoUploader.onWhenAddingFileFailed = uploader.error;\r\n\t\t\t\t$scope.photoUploader.onAfterAddingFile  = function(){\r\n\t\t\t\t\t$scope.fileError = false;\r\n\t\t\t\t\tif($scope.photoUploader.queue.length)\r\n\t\t\t\t\t{\t\r\n\t\t\t\t\t\t$scope.photoUploader.uploadAll()\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\t$scope.photoUploader.onCompleteItem  = function(data, response){\r\n\t\t\t\t\tif($scope.user.avatar_path)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$scope.currentTime = Date.now();\r\n\t\t\t\t\t\t$scope.photoUploader.queue = [];\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\t$state.go($state.current, {}, {reload:true});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar pusher = new Pusher('73a46f761ea4637481b5', {\r\n\t\t\t      \tencrypted: true,\r\n\t\t\t      \tauth: {\r\n\t\t\t\t\t    headers: {\r\n\t\t\t\t\t      'X-CSRF-Token': document.querySelector('meta[name=\"csrf-token\"]').getAttribute('content')\r\n\t\t\t\t\t    }\r\n\t\t\t\t  \t}\r\n\t\t\t    });\r\n\r\n\t\t\t\tvar channel = {};\r\n\r\n\t\t\t\tchannel.user = pusher.subscribe('private-App.User.' + $scope.user.id);\r\n\r\n\t\t\t\tchannel.user.bindings = [\r\n\t\t\t\t \tchannel.user.bind('Illuminate\\\\Notifications\\\\Events\\\\BroadcastNotificationCreated', function(data) {\r\n\t\t\t\t \t\t// formating the notification\r\n\t\t\t\t \t\tdata.created_at = data.attachment.created_at;\r\n\r\n\t\t\t\t \t\tdata.data = {};\r\n\t\t\t\t \t\tdata.data.attachment = data.attachment;\r\n\t\t\t\t \t\tdata.data.url = data.url;\r\n\t\t\t\t \t\tdata.data.withParams = data.withParams;\r\n\t\t\t\t \t\tdata.data.sender = data.sender;\r\n\t\t\t\t \t\tdata.data.message = data.message;\r\n\r\n\t\t\t\t \t\t// pushes the new notification in the unread_notifications array\r\n\t\t\t\t \t\t$scope.$apply(function(){\r\n\t\t\t\t\t    \t$scope.user.unread_notifications.unshift(data);\r\n\t\t\t\t \t\t});\r\n\r\n\t\t\t\t \t\t// notify the user with a toast message\r\n\t\t\t\t \t\tHelper.notify(data.sender.name + ' ' + data.message);\r\n\r\n\t\t\t\t \t\tif($state.current.name == data.data.url)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t$state.go($state.current, {}, {reload:true});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t    }),\r\n\t\t\t\t];\r\n\t\t\t})\r\n\r\n\t\t$scope.markAsRead = function(notification){\r\n\t\t\tHelper.post('/user/mark-as-read', notification)\r\n\t\t\t\t.success(function(){\r\n\t\t\t\t\tvar index = $scope.user.unread_notifications.indexOf(notification);\r\n\r\n\t\t\t\t\t$scope.user.unread_notifications.splice(index, 1);\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(){\r\n\t\t\t\t\tHelper.error();\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\t$scope.read = function(notification){\t\t\t\r\n\t\t\t$state.go(notification.data.url);\r\n\r\n\t\t\t$scope.markAsRead(notification);\r\n\t\t}\r\n\r\n\t\t$scope.$on('closeSidenav', function(){\r\n\t\t\t$mdSidenav('left').close();\r\n\t\t});\r\n\t}]);"]}